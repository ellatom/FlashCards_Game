{"ast":null,"code":"var _jsxFileName = \"/home/ellatom/Desktop/HTMLSENDBOX/JS/FlashCardRepo-master/src/Components/FlashCards.js\";\nimport React from 'react';\nimport api from './api';\n\nclass FlashCards extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.initCardsDack = async () => {\n      let cards = await api.getCards();\n      let shuffeledCards = this.shuffleCards(cards);\n      this.cards = shuffeledCards;\n      this.cardsLength = shuffeledCards.length;\n      this.setState({\n        currentCard: shuffeledCards[0],\n        loading: false\n      });\n    };\n\n    this.shuffleCards = cards => {\n      let shuffledCards = [];\n\n      for (let i = 0; i < cards.length; i++) {\n        let j = Math.floor(Math.random() * i);\n        let temp = cards[i];\n        shuffledCards[i] = cards[j];\n        shuffledCards[j] = temp;\n      }\n\n      return shuffledCards;\n    };\n\n    this.flipCard = card => {\n      if (!card.classList.contains('on')) {\n        card.classList.remove('off');\n        card.classList.add('on');\n      } else {\n        card.classList.remove('on');\n        card.classList.add('off');\n      }\n    };\n\n    this.revealCard = () => {\n      let card = document.querySelector(\".flipCardInner\");\n      this.flipCard(card);\n    };\n\n    this.setNotRemoveCard = () => {\n      this.setState({\n        isNo: true\n      });\n    };\n\n    this.setCompleted = () => {\n      this.setState({\n        completed: this.state.completed + 1,\n        isNo: false\n      }); ///bug only on end+1 completed\n\n      if (this.state.completed === this.cardsLength - 1) this.showWinnerOverlay();\n    };\n\n    this.showWinnerOverlay = () => {\n      document.getElementById(\"overlay\").setAttribute(\"style\", \"display:flex\");\n    };\n\n    this.removeOverlay = () => //click on start new game\n    {\n      document.getElementById(\"overlay\").setAttribute(\"style\", \"display:none\");\n      this.setState({\n        completed: 0\n      });\n      this.initCardsDack();\n    };\n\n    this.addNewCard = () => {\n      if (this.cards === 0) return;\n\n      if (this.state.isNo === false) {\n        this.cards.shift(); //remove first element\n\n        let firstCardArr = this.cards[0];\n        this.setState({\n          currentCard: firstCardArr\n        });\n        document.querySelector(\".flipCardInner\").classList.remove('on'); //bug fixed...flip card back\n      } else {\n        this.initCardsDack(this.cards);\n        document.querySelector(\".flipCardInner\").classList.remove('on');\n      }\n    };\n\n    this.innerCard = React.createRef();\n    this.cards = [];\n    this.state = {\n      currentCard: \"\",\n      completed: 0,\n      loading: false,\n      isNo: true\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    this.initCardsDack();\n  }\n\n  currentCardQuesstion() {\n    if (!this.state.currentCard) return \"\";\n    return this.state.currentCard.question;\n  }\n\n  currentCardAnswer() {\n    if (!this.state.currentCard) return \"\";\n    return this.state.currentCard.answer;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"overlay\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-trophy\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }), \" You have completed all flash cards\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"reshuffle\",\n      onClick: this.removeOverlay,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }\n    }, \"Reshuffle again\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flipCard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flipCardInner\",\n      ref: this.innerCard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flipCardFront\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"far fa-question-circle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 44\n      }\n    }), \"Question:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 95\n      }\n    }), this.currentCardQuesstion()), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flipCardBack\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-crown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 43\n      }\n    }), \"Answer:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 82\n      }\n    }), this.currentCardAnswer()))), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"newCard\",\n      onClick: this.addNewCard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }\n    }, \"New card\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"revealAnswer\",\n      onClick: this.revealCard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    }, \"Reveal Answer\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }\n    }, \"Did you get it right?\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"yes\",\n      onClick: this.setCompleted,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }\n    }, \"Yes\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"no\",\n      onClick: this.setNotRemoveCard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }\n    }, \"No\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }\n    }, \"Completed\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }\n    }, this.state.completed, \"/\", this.cardsLength));\n  }\n\n}\n\nexport default FlashCards;","map":{"version":3,"sources":["/home/ellatom/Desktop/HTMLSENDBOX/JS/FlashCardRepo-master/src/Components/FlashCards.js"],"names":["React","api","FlashCards","Component","constructor","props","initCardsDack","cards","getCards","shuffeledCards","shuffleCards","cardsLength","length","setState","currentCard","loading","shuffledCards","i","j","Math","floor","random","temp","flipCard","card","classList","contains","remove","add","revealCard","document","querySelector","setNotRemoveCard","isNo","setCompleted","completed","state","showWinnerOverlay","getElementById","setAttribute","removeOverlay","addNewCard","shift","firstCardArr","innerCard","createRef","componentDidMount","currentCardQuesstion","question","currentCardAnswer","answer","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,OAAhB;;AAEA,MAAMC,UAAN,SAAyBF,KAAK,CAACG,SAA/B,CAAyC;AAEvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAiBnBC,aAjBmB,GAiBJ,YAAS;AACpB,UAAIC,KAAK,GACP,MAAMN,GAAG,CAACO,QAAJ,EADR;AAGA,UAAIC,cAAc,GAChB,KAAKC,YAAL,CAAkBH,KAAlB,CADF;AAGA,WAAKA,KAAL,GAAaE,cAAb;AACA,WAAKE,WAAL,GAAiBF,cAAc,CAACG,MAAhC;AAEA,WAAKC,QAAL,CAAc;AACZC,QAAAA,WAAW,EAAEL,cAAc,CAAC,CAAD,CADf;AAEZM,QAAAA,OAAO,EAAE;AAFG,OAAd;AAIH,KA/BkB;;AAAA,SAgCnBL,YAhCmB,GAgCHH,KAAD,IAAW;AACxB,UAAIS,aAAa,GAAG,EAApB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,KAAK,CAACK,MAA1B,EAAkCK,CAAC,EAAnC,EAAuC;AACrC,YAAIC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,CAA3B,CAAR;AACA,YAAIK,IAAI,GAAGf,KAAK,CAACU,CAAD,CAAhB;AACAD,QAAAA,aAAa,CAACC,CAAD,CAAb,GAAmBV,KAAK,CAACW,CAAD,CAAxB;AACAF,QAAAA,aAAa,CAACE,CAAD,CAAb,GAAmBI,IAAnB;AACD;;AAED,aAAON,aAAP;AACD,KA1CkB;;AAAA,SA2CnBO,QA3CmB,GA2CPC,IAAD,IAAU;AACnB,UAAI,CAACA,IAAI,CAACC,SAAL,CAAeC,QAAf,CAAwB,IAAxB,CAAL,EAAoC;AAClCF,QAAAA,IAAI,CAACC,SAAL,CAAeE,MAAf,CAAsB,KAAtB;AACAH,QAAAA,IAAI,CAACC,SAAL,CAAeG,GAAf,CAAmB,IAAnB;AACD,OAHD,MAIK;AACHJ,QAAAA,IAAI,CAACC,SAAL,CAAeE,MAAf,CAAsB,IAAtB;AACAH,QAAAA,IAAI,CAACC,SAAL,CAAeG,GAAf,CAAmB,KAAnB;AACD;AACF,KApDkB;;AAAA,SAsDnBC,UAtDmB,GAsDN,MAAM;AACjB,UAAIL,IAAI,GACNM,QAAQ,CAACC,aAAT,CAAuB,gBAAvB,CADF;AAGA,WAAKR,QAAL,CAAcC,IAAd;AACD,KA3DkB;;AAAA,SA6DnBQ,gBA7DmB,GA6DF,MACjB;AACE,WAAKnB,QAAL,CAAc;AAACoB,QAAAA,IAAI,EAAC;AAAN,OAAd;AACD,KAhEkB;;AAAA,SAkEnBC,YAlEmB,GAkEJ,MAAM;AACnB,WAAKrB,QAAL,CAAc;AAACsB,QAAAA,SAAS,EAAC,KAAKC,KAAL,CAAWD,SAAX,GAAuB,CAAlC;AAAqCF,QAAAA,IAAI,EAAC;AAA1C,OAAd,EADmB,CAC6C;;AAChE,UAAG,KAAKG,KAAL,CAAWD,SAAX,KAAwB,KAAKxB,WAAL,GAAiB,CAA5C,EACE,KAAK0B,iBAAL;AAEH,KAvEkB;;AAAA,SAwEnBA,iBAxEmB,GAwED,MAClB;AACGP,MAAAA,QAAQ,CAACQ,cAAT,CAAwB,SAAxB,EAAmCC,YAAnC,CAAgD,OAAhD,EAAyD,cAAzD;AACF,KA3EkB;;AAAA,SA4EnBC,aA5EmB,GA4EL,MAAI;AAClB;AACEV,MAAAA,QAAQ,CAACQ,cAAT,CAAwB,SAAxB,EAAmCC,YAAnC,CAAgD,OAAhD,EAAyD,cAAzD;AACA,WAAK1B,QAAL,CAAc;AAACsB,QAAAA,SAAS,EAAC;AAAX,OAAd;AACA,WAAK7B,aAAL;AACD,KAjFkB;;AAAA,SAkFnBmC,UAlFmB,GAkFR,MAAK;AACd,UAAG,KAAKlC,KAAL,KAAa,CAAhB,EACE;;AACF,UAAG,KAAK6B,KAAL,CAAWH,IAAX,KAAkB,KAArB,EACA;AACE,aAAK1B,KAAL,CAAWmC,KAAX,GADF,CACqB;;AACnB,YAAIC,YAAY,GAAE,KAAKpC,KAAL,CAAW,CAAX,CAAlB;AACA,aAAKM,QAAL,CAAc;AAACC,UAAAA,WAAW,EAAE6B;AAAd,SAAd;AACAb,QAAAA,QAAQ,CAACC,aAAT,CAAuB,gBAAvB,EAAyCN,SAAzC,CAAmDE,MAAnD,CAA0D,IAA1D,EAJF,CAIkE;AACjE,OAND,MAOI;AACF,aAAKrB,aAAL,CAAmB,KAAKC,KAAxB;AACAuB,QAAAA,QAAQ,CAACC,aAAT,CAAuB,gBAAvB,EAAyCN,SAAzC,CAAmDE,MAAnD,CAA0D,IAA1D;AACD;AACF,KAhGkB;;AAGjB,SAAKiB,SAAL,GAAiB5C,KAAK,CAAC6C,SAAN,EAAjB;AAEA,SAAKtC,KAAL,GAAa,EAAb;AACA,SAAK6B,KAAL,GAAa;AAAEtB,MAAAA,WAAW,EAAE,EAAf;AAAmBqB,MAAAA,SAAS,EAAE,CAA9B;AAAiCpB,MAAAA,OAAO,EAAE,KAA1C;AAAgDkB,MAAAA,IAAI,EAAC;AAArD,KAAb;AACD;;AAGD,QAAMa,iBAAN,GAA0B;AAExB,SAAKjC,QAAL,CACE;AAAEE,MAAAA,OAAO,EAAE;AAAX,KADF;AAEA,SAAKT,aAAL;AACD;;AAkFDyC,EAAAA,oBAAoB,GAAG;AACrB,QAAI,CAAC,KAAKX,KAAL,CAAWtB,WAAhB,EACE,OAAO,EAAP;AAEF,WAAO,KAAKsB,KAAL,CAAWtB,WAAX,CAAuBkC,QAA9B;AAED;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,QAAI,CAAC,KAAKb,KAAL,CAAWtB,WAAhB,EACE,OAAO,EAAP;AAEF,WAAO,KAAKsB,KAAL,CAAWtB,WAAX,CAAuBoC,MAA9B;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE,uDACE;AAAK,MAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAM;AAAG,MAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAN,wCADF,eAEE;AAAQ,MAAA,SAAS,EAAC,WAAlB;AAA8B,MAAA,OAAO,EAAE,KAAKX,aAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFF,CADF,eAKE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAA+B,MAAA,GAAG,EAAE,KAAKI,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA+B;AAAG,MAAA,SAAS,EAAC,wBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA/B,4BAAkF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAlF,EAAwF,KAAKG,oBAAL,EAAxF,CADF,eAEE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA8B;AAAG,MAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA9B,0BAAqE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAArE,EAA2E,KAAKE,iBAAL,EAA3E,CAFF,CADF,CALF,eAYE;AAAQ,MAAA,SAAS,EAAC,SAAlB;AAA4B,MAAA,OAAO,EAAE,KAAKR,UAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAZF,eAaE;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAiC,MAAA,OAAO,EAAE,KAAKZ,UAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAbF,eAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAdF,eAeE;AAAQ,MAAA,SAAS,EAAC,KAAlB;AAAwB,MAAA,OAAO,EAAE,KAAKK,YAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAfF,eAgBE;AAAQ,MAAA,SAAS,EAAC,IAAlB;AAAuB,MAAA,OAAO,EAAE,KAAKF,gBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBF,eAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAjBF,eAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKI,KAAL,CAAWD,SAAjB,OAA6B,KAAKxB,WAAlC,CAlBF,CADF;AAsBD;;AAzIsC;;AA2IzC,eAAeT,UAAf","sourcesContent":["import React from 'react';\nimport api from './api';\n\nclass FlashCards extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.innerCard = React.createRef();\n\n    this.cards = [];\n    this.state = { currentCard: \"\", completed: 0, loading: false,isNo:true };\n  }\n\n\n  async componentDidMount() {\n\n    this.setState(\n      { loading: true });\n    this.initCardsDack();  \n  };\n\n  initCardsDack= async()=>{\n      let cards =\n        await api.getCards();\n\n      let shuffeledCards =\n        this.shuffleCards(cards);\n\n      this.cards = shuffeledCards;\n      this.cardsLength=shuffeledCards.length;\n\n      this.setState({\n        currentCard: shuffeledCards[0],\n        loading: false\n      });\n  }\n  shuffleCards = (cards) => {\n    let shuffledCards = [];\n    for (let i = 0; i < cards.length; i++) {\n      let j = Math.floor(Math.random() * i);\n      let temp = cards[i];\n      shuffledCards[i] = cards[j];\n      shuffledCards[j] = temp;\n    }\n\n    return shuffledCards;\n  }\n  flipCard = (card) => {\n    if (!card.classList.contains('on')) {\n      card.classList.remove('off');\n      card.classList.add('on');\n    }\n    else {\n      card.classList.remove('on');\n      card.classList.add('off');\n    }\n  }\n\n  revealCard = () => {\n    let card =\n      document.querySelector(\".flipCardInner\");\n\n    this.flipCard(card);\n  }\n\n  setNotRemoveCard=()=>\n  {\n    this.setState({isNo:true});\n  }\n\n  setCompleted = () => {\n    this.setState({completed:this.state.completed + 1, isNo:false});///bug only on end+1 completed\n    if(this.state.completed ===this.cardsLength-1)\n      this.showWinnerOverlay();\n\n  }\n  showWinnerOverlay=()=>\n  {\n     document.getElementById(\"overlay\").setAttribute(\"style\", \"display:flex\");\n  }\n  removeOverlay=()=>//click on start new game\n  {\n    document.getElementById(\"overlay\").setAttribute(\"style\", \"display:none\");\n    this.setState({completed:0});\n    this.initCardsDack();\n  }\n  addNewCard=()=> {\n    if(this.cards===0)\n      return;\n    if(this.state.isNo===false)\n    {  \n      this.cards.shift();//remove first element\n      let firstCardArr= this.cards[0];\n      this.setState({currentCard: firstCardArr});\n      document.querySelector(\".flipCardInner\").classList.remove('on');//bug fixed...flip card back\n    }\n    else{\n      this.initCardsDack(this.cards);\n      document.querySelector(\".flipCardInner\").classList.remove('on');\n    }\n  }\n  currentCardQuesstion() {\n    if (!this.state.currentCard)\n      return \"\";\n\n    return this.state.currentCard.question;\n\n  }\n\n  currentCardAnswer() {\n    if (!this.state.currentCard)\n      return \"\";\n\n    return this.state.currentCard.answer;\n  }\n\n  render() {\n    return (\n      <>\n        <div id=\"overlay\">\n          <div> <i className=\"fas fa-trophy\"></i> You have completed all flash cards</div>\n          <button className=\"reshuffle\" onClick={this.removeOverlay}>Reshuffle again</button>\n        </div>\n        <div className=\"flipCard\">\n          <div className=\"flipCardInner\" ref={this.innerCard}>\n            <div className=\"flipCardFront\"><i className=\"far fa-question-circle\"></i>Question:<br/>{this.currentCardQuesstion()}</div>\n            <div className=\"flipCardBack\"><i className=\"fas fa-crown\"></i>Answer:<br/>{this.currentCardAnswer()}</div>\n          </div>\n        </div>\n\n        <button className=\"newCard\" onClick={this.addNewCard}>New card</button>\n        <button className=\"revealAnswer\" onClick={this.revealCard}>Reveal Answer</button>\n        <div>Did you get it right?</div>\n        <button className=\"yes\" onClick={this.setCompleted}>Yes</button>\n        <button className=\"no\" onClick={this.setNotRemoveCard}>No</button>\n        <div>Completed</div>\n        <div>{this.state.completed}/{this.cardsLength}</div>\n      </>\n    );\n  }\n}\nexport default FlashCards;\n"]},"metadata":{},"sourceType":"module"}